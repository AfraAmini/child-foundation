# -*- coding: utf-8 -*-
# Generated by Django 1.11.2 on 2018-01-20 12:11
from __future__ import unicode_literals

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0008_alter_user_username_max_length'),
        ('system', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='active_user',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('first_name', models.CharField(max_length=100, null=True, verbose_name='نام')),
                ('last_name', models.CharField(max_length=100, null=True, verbose_name='نام خانوادگی')),
                ('id_number', models.IntegerField(unique=True, verbose_name='کد ملی')),
                ('phone_number', models.IntegerField(null=True, verbose_name='شماره تلفن')),
                ('address', models.TextField(null=True, verbose_name='آدرس')),
                ('email', models.EmailField(max_length=254, verbose_name='رایانامه')),
            ],
            options={
                'verbose_name': 'کاربر فعال',
                'verbose_name_plural': 'کاربران فعال',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='hamyar_madadjoo_meeting',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='hamyar_madadjoo_non_cash',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(auto_now=True)),
                ('text', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='hamyar_madadjoo_payment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.IntegerField()),
                ('type', models.CharField(choices=[('mo', 'monthly'), ('ann', 'annual'), ('inst', 'instantly')], max_length=60)),
                ('date', models.DateField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='hamyar_system_payment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.IntegerField()),
                ('date', models.DateField(auto_now=True)),
                ('system', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='system.information')),
            ],
        ),
        migrations.CreateModel(
            name='madadjoo_hamyar_letter',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(auto_now=True)),
                ('text', models.TextField()),
                ('confirmed', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='madadjoo_madadkar_letter',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField()),
                ('date', models.DateField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='madadkar_remove_madadjoo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField()),
                ('date', models.DateField()),
            ],
        ),
        migrations.CreateModel(
            name='requirements',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.TextField(null=True)),
                ('type', models.CharField(choices=[('mo', 'monthly'), ('ann', 'annual'), ('inst', 'instantly')], max_length=60)),
                ('confirmed', models.BooleanField(default=False)),
                ('urgent', models.BooleanField(default=False)),
                ('cash', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='sponsership',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='hamyar',
            fields=[
                ('active_user_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'همیار',
                'verbose_name_plural': 'همیاران',
            },
            bases=('active_user.active_user',),
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='madadjoo',
            fields=[
                ('active_user_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('bio', models.TextField(null=True, verbose_name='شرح حال')),
                ('edu_status', models.TextField(null=True, verbose_name='وضعیت تحصیلی')),
                ('successes', models.TextField(null=True, verbose_name='شرح موفقیت\u200cها')),
                ('confirmed', models.BooleanField(default=False, verbose_name='تایید شده')),
                ('removed', models.BooleanField(default=False, verbose_name='حذف شده')),
                ('invest_percentage', models.FloatField(default=0.0, null=True, verbose_name='درصد پس\u200cانداز')),
            ],
            options={
                'verbose_name': 'مددجو',
                'verbose_name_plural': 'مددجویان',
            },
            bases=('active_user.active_user',),
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='madadkar',
            fields=[
                ('active_user_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('bio', models.TextField(null=True, verbose_name='شرح حال')),
            ],
            options={
                'verbose_name': 'مددکار',
                'verbose_name_plural': 'مددکاران',
            },
            bases=('active_user.active_user',),
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.AddField(
            model_name='active_user',
            name='groups',
            field=models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups'),
        ),
        migrations.AddField(
            model_name='active_user',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions'),
        ),
        migrations.AddField(
            model_name='sponsership',
            name='hamyar',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='active_user.hamyar'),
        ),
        migrations.AddField(
            model_name='sponsership',
            name='madadjoo',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='active_user.madadjoo'),
        ),
        migrations.AddField(
            model_name='requirements',
            name='madadjoo',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='active_user.madadjoo'),
        ),
        migrations.AddField(
            model_name='madadkar_remove_madadjoo',
            name='hamyar',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='active_user.hamyar'),
        ),
        migrations.AddField(
            model_name='madadkar_remove_madadjoo',
            name='madadjoo',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='active_user.madadjoo', unique=True),
        ),
        migrations.AddField(
            model_name='madadkar_remove_madadjoo',
            name='madadkar',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='active_user.madadkar'),
        ),
        migrations.AddField(
            model_name='madadjoo_madadkar_letter',
            name='madadjoo',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='active_user.madadjoo'),
        ),
        migrations.AddField(
            model_name='madadjoo_madadkar_letter',
            name='madadkar',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='active_user.madadkar'),
        ),
        migrations.AddField(
            model_name='madadjoo_hamyar_letter',
            name='hamyar',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='active_user.hamyar'),
        ),
        migrations.AddField(
            model_name='madadjoo_hamyar_letter',
            name='madadjoo',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='active_user.madadjoo'),
        ),
        migrations.AddField(
            model_name='madadjoo',
            name='corr_madadkar',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='active_user.madadkar', verbose_name='مددجوی حمایت\u200cکننده'),
        ),
        migrations.AddField(
            model_name='hamyar_system_payment',
            name='hamyar',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='active_user.hamyar'),
        ),
        migrations.AddField(
            model_name='hamyar_madadjoo_payment',
            name='hamyar',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='active_user.hamyar'),
        ),
        migrations.AddField(
            model_name='hamyar_madadjoo_payment',
            name='madadjoo',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='active_user.madadjoo'),
        ),
        migrations.AddField(
            model_name='hamyar_madadjoo_non_cash',
            name='hamyar',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='active_user.hamyar'),
        ),
        migrations.AddField(
            model_name='hamyar_madadjoo_non_cash',
            name='madadjoo',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='active_user.madadjoo'),
        ),
        migrations.AddField(
            model_name='hamyar_madadjoo_meeting',
            name='hamyar',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='active_user.hamyar'),
        ),
        migrations.AddField(
            model_name='hamyar_madadjoo_meeting',
            name='madadjoo',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='active_user.madadjoo'),
        ),
        migrations.AlterUniqueTogether(
            name='sponsership',
            unique_together=set([('madadjoo', 'hamyar')]),
        ),
        migrations.AlterUniqueTogether(
            name='madadjoo_madadkar_letter',
            unique_together=set([('madadjoo', 'date')]),
        ),
        migrations.AlterUniqueTogether(
            name='madadjoo_hamyar_letter',
            unique_together=set([('hamyar', 'date', 'madadjoo')]),
        ),
        migrations.AlterUniqueTogether(
            name='hamyar_system_payment',
            unique_together=set([('hamyar', 'date')]),
        ),
        migrations.AlterUniqueTogether(
            name='hamyar_madadjoo_payment',
            unique_together=set([('madadjoo', 'hamyar', 'date')]),
        ),
        migrations.AlterUniqueTogether(
            name='hamyar_madadjoo_non_cash',
            unique_together=set([('hamyar', 'date', 'madadjoo')]),
        ),
        migrations.AlterUniqueTogether(
            name='hamyar_madadjoo_meeting',
            unique_together=set([('hamyar', 'date', 'madadjoo')]),
        ),
    ]
